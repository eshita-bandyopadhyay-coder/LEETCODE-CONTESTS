//LEETCODE WEEKLY 428 Q3

class Solution {
public:
 vector<int> z_function(vector<int>& nums)
 {
    int n=nums.size();
    vector<int> z(n);
    int l=0,r=0;
    for(int i=0;i<n;++i)
    {
        if(i<=r)
        {
            z[i]=min(r-i+1,z[i-l]);
        }
        while(i+z[i]<n && nums[z[i]] == nums[i+z[i]])
        {
            ++z[i];
        }
        if(i+z[i]-1>r)
        {
            l=i;
            r=i+z[i]-1;
        }
    }
    return z;
 }
    int beautifulSplits(vector<int>& nums) {
        int n=nums.size();
        vector<int> z= z_function(nums);
        int res=0;
        for(int i=1;i<n-1;++i)
        {
            vector<int> rem_nums(nums.begin()+i , nums.end());
            vector<int> z2= z_function(rem_nums);
            for(int j=i+1;j<n;++j)
            {
                if(((j>=i+i) && z[i]>=i) || (z2[j-i]>=j-i))
                {
                    ++res;
                }
            }
        }
        return res;
    }
};